---
title: "Understanding the relationship between stocks of community wealth and food system"
author: "Elliot Hohn"
format: html
editor: visual
---

## Introduction

Community wealth quantification outline.

LAMP grant program description.

Hypothesis re: relationship between the two.

## Methods

Plan right now is load county level community wealth data, and LAMP grant data, identify counties with low grant funding amounts (or maybe split into high, medium, and low?), then perform cluster analysis to determine common characteristics of the counties in each group, if any.

## Environment setup

```{r}
library(tidyverse)
library(sf)
library(openxlsx)
library(stringr)
library(corrplot)
library(stringr)
```

## Load community stocks data

Load data directly from CSU [github repo](https://github.com/CSU-Local-and-Regional-Food-Systems "CSU Local and Regional Food Systems repo").

```{r}
comm_stocks_url <- 'https://raw.githubusercontent.com/CSU-Local-and-Regional-Food-Systems/USDA-AMS-Data-and-Metrics/main/Indicators%20of%20Community%20Wealth/community_wealth.csv'
comm_stocks <- read.csv(comm_stocks_url)

# Function to add leading 0 to 4-digit fips values in comm_stocks
add_leading_zero <- function(x) {
  # Check if the number has 4 digits
  ifelse(nchar(x) == 4, paste0("0", x), x)
}

comm_stocks$fips <- sapply(comm_stocks$fips, add_leading_zero)
print(head(comm_stocks))
```

```{r}
# ggplot(comm_stocks, aes(x = value)) + 
#   geom_histogram(fill = 'red', colour = 'black') + 
#   facet_wrap(variable_name ~ .)

print(unique(comm_stocks$variable_name))
```

### Check correlations between variables

There are different years associated with the rows of data...how should I deal with this? Filter to only the newest data? Use the average? The grants data will also have a date associate with it, but I was thinking those grants would all be summed to get a "total amount invested" value.

I think for now I'm going to use the mean across all years for any given variable. A quick look at the data indicates that the values don't shift drastically from year to year, unsurprisingly.

```{r}
# reshape data from tall to wide to give each variable its own column
comm_stocks_wide <- comm_stocks %>%
  select(fips, year, variable_name, value) %>%
  group_by(fips, variable_name) %>%
  summarise(value = mean(value)) %>%
  ungroup() %>%
  pivot_wider(names_from = variable_name, values_from = value)
```

```{r}
# correlation matrix
correlation <- cor(comm_stocks_wide[, 2:ncol(comm_stocks_wide)], use = "complete.obs")
corrplot(correlation, method = 'square', tl.cex = 0.4, tl.col = 'black', tl.srt = 45,
         type = 'upper', order = "hclust")
```

### Load counties shapefile and join to community stocks data

```{r}
counties <- st_read('data/cb_2021_us_county_20m/cb_2021_us_county_20m.shp') %>%
  filter(!STATE_NAME %in% c('Alaska', 'Hawaii', 'Puerto Rico')) %>%
  select(GEOID, geometry) %>%
  st_transform(5070)

comm_stocks_geo <- merge(counties, comm_stocks_wide, by.x = 'GEOID', by.y = 'fips')

ggplot(comm_stocks_geo) +
  geom_sf(aes(fill = food_secure)) +
  scale_fill_distiller(
    name="Food Security", 
    palette = "BrBG",
    direction = 1
    ) +
  theme_void() +
  theme(legend.position = "bottom",
        legend.key.width = unit(2,"cm"),
        legend.key.height = unit(0.2,"cm")
  )
```

```{r}
summary_stats <- comm_stocks %>%
  group_by(variable_name) %>%
  summarize(
    mean = mean(value),
    median = median(value),
    sd = sd(value),
    max = max(value),
    min = min(value)
  )

print(summary_stats)
```

## Load LAMP data

Data downloaded directly from URL on the LAMP Navigator [webpage](https://www.ams.usda.gov/data/lamp-navigator "LAMP Navigator web pagef").

```{r}
lamp_url <- 'https://www.ams.usda.gov/sites/default/files/media/LAMPDatasetandDataDictionary.xlsx'

lamp <- read.xlsx(lamp_url, sheet = 'LAMP Dataset 2006 to 2023')
print(head(lamp))
```

### Load city lat/lon dataset

Loaded directly from [GitHub repo](https://github.com/kelvins/US-Cities-Database "city lat/lon data dump").

Going to try to join to cities from LAMP dataset.

```{r}
url <- 'https://raw.githubusercontent.com/kelvins/US-Cities-Database/main/csv/us_cities.csv'

city_loc <- read.csv(url)
```

Prep data for merge by renaming some columns, converting city names to all lower case in both data sets to ensure clean join. Note: there are some cities in the city_loc dataset that have more than one row, I think because they are bisected by county lines, so I dealt with that short list of issues by grouping them by city and state and selecting the first row in the group.

Also, there are three remaining rows in the LAMP data that don't have cities listed, so there are no coords for them, but I could track those down and fix them manually.

```{r}
lamp <- lamp %>%
  rename(
    state = State,
    city = City.2
    ) %>%
  mutate(city = str_squish(str_trim(tolower(city)))) %>%
  filter(!state %in% c('HI', 'AK', 'PR'))

city_loc <- city_loc %>%
  select(-c(ID, COUNTY)) %>%
  rename(
    city = CITY,
    state = STATE_CODE
  ) %>%
  mutate(city = str_squish(str_trim(tolower(city)))) %>%
  group_by(city, state) %>%
  filter(row_number()==1) %>% 
  ungroup()

# check how many cities in LAMP data are in city_loc data
print(length(unique(lamp$city)))
print(length(unique(lamp$city) %in% city_loc$city))

# do the join
lamp <- merge(lamp, city_loc, by = c('city', 'state'), all.x = TRUE)

# convert to sf object
lamp_sf <- lamp %>% 
  drop_na(LATITUDE, LONGITUDE) %>%
  st_as_sf(coords = c("LONGITUDE", "LATITUDE")) %>%
  st_set_crs(4326) %>%
  st_transform(st_crs(comm_stocks_geo))
```

### Add LAMP grant points to the map

```{r}
ggplot(comm_stocks_geo) +
  geom_sf(aes(fill = food_secure)) +
  geom_sf(
    data = lamp_sf,
    size = 1.5,
    alpha = .5,
    color = 'purple',
    fill = 'purple'
    ) +
  scale_fill_distiller(
    name="Food Security", 
    palette = "BrBG",
    direction = 1
    ) +
  theme_void() +
  theme(legend.position = "bottom",
        legend.key.width = unit(2,"cm"),
        legend.key.height = unit(0.2,"cm")
  )
```
